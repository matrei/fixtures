buildscript {
    ext {
        grailsVersion = project.grailsVersion
    }
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
    }
}

version "3.0.1"
group "org.grails.plugins"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"org.grails.grails-plugin"
apply plugin:"org.grails.grails-plugin-publish"
//apply plugin:"org.grails.grails-gsp"

//ext {
//    grailsVersion = project.grailsVersion
//    gradleWrapperVersion = project.gradleWrapperVersion
//}

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

//dependencyManagement {
//    imports {
//        mavenBom "org.grails:grails-bom:$grailsVersion"
//    }
//    applyMavenExclusions false
//}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
}

dependencies {
//    compile "org.springframework.boot:spring-boot-starter-logging"
//    compile "org.springframework.boot:spring-boot-autoconfigure"
    profile "org.grails.profiles:plugin"
    compile "org.grails:grails-core"
//    compile "org.springframework.boot:spring-boot-starter-actuator"
//    compile "org.springframework.boot:spring-boot-starter-tomcat"
//    compile "org.grails:grails-dependencies"
//    compile "org.grails:grails-web-boot"
//    compile "org.grails.plugins:cache"
//    compile "org.grails.plugins:scaffolding"
//    compile 'org.grails.plugins:build-test-data:3.3.1'
//    compile 'org.grails.plugins:hibernate5'
//    compile "org.hibernate:hibernate-ehcache"
    console "org.grails:grails-console"
//    profile "org.grails.profiles:web-plugin"
    provided "org.grails:grails-plugin-services"
    provided "org.grails:grails-plugin-domain-class"
    runtime "com.h2database:h2"

    testCompile "org.grails.plugins:hibernate5:${gormVersion-".RELEASE"}"
    testCompile "org.hibernate:hibernate-ehcache"
    testCompile "org.grails:grails-gorm-testing-support"

    testCompile "org.grails:grails-plugin-testing"
//    testCompile "org.grails.plugins:geb"
//    testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
//    testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"

    testCompile 'org.spockframework:spock-core:1.1-groovy-2.4'
    provided "org.grails.plugins:build-test-data:3.3.1"
}

task wrapper(type: Wrapper) {
    gradleVersion = gradleWrapperVersion
}
grailsPublish {
    githubSlug = 'gpc/grails-fixtures'
    license {
        name = 'Apache-2.0'
    }
    title = "Grails Fixtures Plugin"
    desc = "Load complex domain data via a simple DSL"
    developers = ["Grails Plugin Collective":"grails.plugin.collective@gmail.com"]
    portalUser = ""
    portalPassword = ""    
}

jar {
    exclude "grails/plugin/fixtures/test/**"
    exclude "test/**"
}

//def documentation = "http://gpc.github.com/grails-fixtures/"

//def issueManagement = [ system: "JIRA", url: "http://jira.grails.org/browse/GPFIXTURES" ]
//def scm = [url: "https://github.com/gpc/grails-fixtures"]
